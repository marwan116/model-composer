[tool.poetry]
name = "model_composer"
version = "0.2.0"
description = "Easily compose a model ensemble from your machine learning models"
packages = [{ include = "model_composer", from = "src" }]
authors = []

readme = "README.md"
include = ["README.md", "LICENSE.txt", "src/aws_parquet/py.typed"]
exclude = [
    "*.so",
    "*.pyc",
    "*~",
    "#*",
    ".git*",
    ".coverage*",
    "DS_Store",
    "__pycache__",
]


[tool.poetry.dependencies]
python = ">=3.8, <3.12"

# validation
pydantic = "^1.10.8"
typeguard = "^4.0.0"

# parsing yaml
pyyaml = "^6.0"

# cloud path handling in config
cloudpathlib = { extras = [
    "s3",
    'gs',
    'azure',
], version = "^0.14.0", optional = true }
botocore = { version = "^1.29.155", optional = true }

tensorflow = { version = ">=2.0.0, <3.0.0", optional = true }
pydotplus = { version = ">=2.0.0, <3.0.0", optional = true }

# tensorflow
[tool.poetry.extras]
cloudpathlib = ["cloudpathlib", "botocore"]
tensorflow = ["tensorflow", "pydotplus"]
all = ["cloudpathlib", "botocore", "tensorflow", "pydotplus"]

[tool.poetry.group.docs.dependencies]
furo = "^2023.5.20"
sphinx = "^7.0.1"

[tool.poetry.group.dev.dependencies]
# type hints
mypy = "1.3.0"
# formatting
black = "23.3.0"
# linting
ruff = "0.0.269"
# import sorting
isort = "5.12.0"
# testing
pytest = "7.3.1"
pytest-sugar = "0.9.7"
# on-demand environments
nox = "2023.4.22"
nox-poetry = "1.0.2"
# running code in README.md
mktestdocs = "^0.2.1"

[tool.mypy]
strict = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "tests.*"
warn_no_return = false
allow_untyped_defs = true
allow_untyped_decorators = true

[[tool.mypy.overrides]]
module = "tensorflow.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "keras.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "yaml.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pandas.*"
ignore_missing_imports = true


[tool.isort]
profile = "black"
combine_as_imports = true
known_first_party = ["model_composer"]
order_by_type = false

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
