[tool.poetry]
name = "model_composer"
version = "0.1.0"
description = "Easily compose a model ensemble from your machine learning models"
packages = [{ include = "model_composer", from = "src" }]
authors = []

readme = "README.md"
include = ["README.md", "LICENSE.txt", "src/aws_parquet/py.typed"]
exclude = ["*.so", "*.pyc", "*~", "#*", ".git*", ".coverage*", "DS_Store", "__pycache__"]


[tool.poetry.dependencies]
python = ">=3.8, <3.11"
pandas = {extras = ["gbq"], version = "^2.0.2"}
pandas-gbq = "^0.19.2"
pydantic = "^1.10.8"
tensorflow = "^2.12.0"
typeguard = "^4.0.0"
pydotplus = "^2.0.2"

[tool.poetry.dev-dependencies]
# type hints
mypy = "1.3.0"
# formatting
black = "23.3.0"
# linting

ruff = "0.0.269"

# import sorting
isort = "5.12.0"
# testing
pytest = "7.3.1"
pytest-sugar = "0.9.7"
# on-demand environments
nox = "2023.4.22"
nox-poetry = "1.0.2"

[tool.mypy]
strict = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "tests.*"
warn_no_return = false
allow_untyped_defs = true
allow_untyped_decorators = true

[tool.isort]
profile = "black"
combine_as_imports = true
known_first_party = ["model_composer"]
order_by_type = false

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
